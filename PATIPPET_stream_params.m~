function p = PIPPET_stream_params(events_unit, variance_unit, lambda_unit, lambda_0, expected_cycles, expected_period, event_times)

p = struct();

gauss_distribution = @(x, mean, v) exp(-.5 * ((x - mean).^ 2) ./ v)./ (sqrt(2*pi*v));

p.e_means = [];
p.event_times = event_times;
p.lambda_0 = lambda_0;

for i=1:expected_cycles
    p.e_means = [p.e_means, events_unit + (i-1)*expected_period];
end

p.e_vars = repmat(variance_unit, [1,expected_cycles]);
p.e_lambdas = repmat(lambda_unit, [1,expected_cycles]);
















mu_i = @(mu, C, i) (inv(C) + [1./p.e_vars(i), 0;0,0])\(C\mu + [p.e_means(i)./p.e_vars(i);0]);
C_i = @(C, i) inv(inv(C) + [1./p.e_vars(i), 0;0,0]);
Lambda_i = @(mu, C, i) p.e_lambdas(i) .* gauss_distribution(mu(1), p.e_means(i), p.e_vars(i)+C(1,1));

function LS = Lambda_star(mu, C)
    LS = p.lambda_0;
    for i = 1:length(e_means)
         LS = LS + Lambda_i(mu, C, i);
    end
end

function CS = C_star(mu, C, lambda_0, e_lambdas, e_means, e_vars)
    CS = lambda_0*C;
    for i = 1:length(e_means)
        CS = CS + Lambda_i(mu, C, i) * (C_i(C, i) + (mu_i(mu, C, i)-mu)*(mu_i(mu, C, i)-mu)');
    end
    CS = CS/Lambda_star(mu, C, lambda_0, e_lambdas, e_means, e_vars);
    %CHECK C STAR FORMULA, last part
end
   
function MS = mu_star(mu, C, lambda_0, e_lambdas, e_means, e_vars)
    S = lambda_0*mu;
    for i = 1:length(e_means)
         S = S + Lambda_i(mu, C, i, e_lambdas, e_means, e_vars) * mu_i(mu, C, i, e_means, e_vars);
    end
    MS = S/Lambda_star(mu, C, lambda_0, e_lambdas, e_means, e_vars);
end

p.Lambda_star = Lambda_star;
p.mu_star = @(mu, C) (lambda_0*mu + sum(Lambda_i_list(mu, C) .* mu_i_list(mu,C)))/p.Lambda_star(mu,C);
p.C_star= @(mu,C) (lambda_0*C + sum(Lambda_i_list(mu, C) .* (C_i_list(C) + (mu_i_list(mu, C)-mu).^2)))/p.Lambda_star(mu,C);